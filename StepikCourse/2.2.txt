Операция соединения JOIN предназначена для обеспечения выборки данных из двух таблиц и включения этих данных в один результирующий набор. При необходимости соединения не двух, а нескольких таблиц, операция соединения применяется несколько раз (последовательно).
------------------------------------
Оператор внутреннего соединения INNER JOIN соединяет две таблицы. Порядок таблиц для оператора неважен, поскольку оператор является симметричным.
Результат запроса формируется так:

каждая строка одной таблицы сопоставляется с каждой строкой второй таблицы;
для полученной «соединённой» строки проверяется условие соединения;
если условие истинно, в таблицу результата добавляется соответствующая «соединённая» строка;

1. Вывести название, жанр и цену тех книг, количество которых больше 8, в отсортированном по убыванию цены виде.

select title, name_genre, price
from book inner join genre
on book.genre_id = genre.genre_id
where amount > 8
order by price desc;

------------------------------------
Оператор внешнего соединения LEFT OUTER JOIN  (можно использовать LEFT JOIN) соединяет две таблицы. Порядок таблиц для оператора важен, поскольку оператор не является симметричным.
Результат запроса формируется так:

в результат включается внутреннее соединение (INNER JOIN) первой и второй таблицы в соответствии с условием;
затем в результат добавляются те записи первой таблицы, которые не вошли во внутреннее соединение на шаге 1, для таких записей соответствующие поля второй таблицы заполняются значениями NULL.
Соединение RIGHT JOIN действует аналогично, только в пункте 2 первая таблица меняется на вторую и наоборот.

2. Вывести все жанры, которые не представлены в книгах на складе.

select name_genre
from book right join genre
on book.genre_id = genre.genre_id
where title is null;

------------------------------------
Оператор перекрёстного соединения, или декартова произведения CROSS JOIN (в запросе вместо ключевых слов можно поставить запятую между таблицами) соединяет две таблицы. Порядок таблиц для оператора неважен, поскольку оператор является симметричным.

select name_city, name_author, DATE_ADD('2020-01-01',INTERVAL FLOOR(RAND() * 365) DAY) AS  Дата
from city, author
order by name_city, Дата desc;

--------------------------------------

4. Вывести информацию о книгах (жанр, книга, автор), относящихся к жанру, включающему слово «роман» в отсортированном по названиям книг виде.

select name_genre, title, name_author
from genre
inner join book on genre.genre_id = book.genre_id
inner join author on book.author_id = author.author_id
where name_genre like "%Роман%"
order by title;

---------------------------------

5. Посчитать количество экземпляров  книг каждого автора из таблицы author.  Вывести тех авторов,  количество книг которых меньше 10, в отсортированном по возрастанию количества виде. Последний столбец назвать Количество.

select name_author,  SUM(amount) AS Количество
from author left join book
on author.author_id = book.author_id
group by name_author
having Количество  < 10 or Количество is null
order by Количество;

------------------------------------

6. В запросах, построенных на нескольких таблицах, можно использовать вложенные запросы. Вложенный запрос может быть включен:  после ключевого слова SELECT,  после FROM и в условие отбора после WHERE (HAVING).


